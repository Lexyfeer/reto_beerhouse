{"version":3,"sources":["components/Formularios.js","config.js","App.js","index.js"],"names":["renderTypeInput","qType","id","qOptions","options","GenericForm","data","questions","map","question","question_id","className","htmlFor","type","CampoString","name","CampoNumeric","min","max","CampoBoolean","value","CampoCheckbox","option","index","CampoSelect","Formularios","useState","setData","fetchApi","a","fetch","method","headers","response","json","responseJSON","console","log","useEffect","onSubmit","e","preventDefault","form_name","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NA0CA,IAAMA,EAAkB,SAACC,EAAOC,EAAIC,GAClC,OAAQF,GACN,IAAK,SACH,OAAO,cAAC,EAAD,CAAaC,GAAIA,IAC1B,IAAK,UACH,OAAO,cAAC,EAAD,CAAcA,GAAIA,IAC3B,IAAK,UACH,OAAO,cAAC,EAAD,CAAcA,GAAIA,IAC3B,IAAK,WACH,OAAO,cAAC,EAAD,CAAeE,QAASD,IACjC,IAAK,WACH,OAAO,cAAC,EAAD,CAAaC,QAASD,IAC/B,QACE,MAAO,QAIPE,EAAc,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACrB,OACEA,EAAOA,EAAKC,UAAUC,KAAI,SAACC,EAAUC,GACnC,OACE,0BAASC,UAAU,cAAnB,UACE,uBAAOC,QAAQ,GAAf,SAAmBH,EAASA,WAC3BT,EAAgBS,EAASI,KAAMJ,EAASC,YAAaD,EAASL,WAF3BM,MAKrC,IAIHI,EAAc,SAAC,GAAY,IAAVZ,EAAS,EAATA,GACrB,OAAO,uBAAOW,KAAK,OAAOX,GAAIA,EAAIa,KAAMb,KAGpCc,EAAe,SAAC,GAAY,IAAVd,EAAS,EAATA,GACtB,OAAO,uBAAOW,KAAK,SAASX,GAAIA,EAAIa,KAAMb,EAAIe,IAAI,IAAIC,IAAI,QAGtDC,EAAe,SAAC,GAAY,IAAVjB,EAAS,EAATA,GACtB,OACE,qCACE,uBAAOU,QAAQ,KAAf,gBACA,uBAAOC,KAAK,QAAQX,GAAIA,EAAIa,KAAMb,EAAIkB,MAAM,OAC5C,uBAAOR,QAAQ,KAAf,gBACA,uBAAOC,KAAK,QAAQX,GAAIA,EAAIa,KAAMb,EAAIkB,MAAM,WAK5CC,EAAgB,SAAC,GACrB,OADqC,EAAdjB,QAEbI,KAAI,SAACc,EAAQC,GACnB,OACE,oCACE,uBAAOV,KAAK,WAAWX,GAAIqB,EAAOR,KAAMO,EAAQF,MAAOE,IACvD,uBAAOV,QAAQ,OAAf,SAAuBU,MAFXC,OAWhBC,EAAc,SAAC,GAAiB,IAAfpB,EAAc,EAAdA,QACrB,OACE,wBAAQW,KAAK,aAAb,SAEIX,EAAQI,KAAI,SAACc,EAAQC,GACnB,OACE,wBAAoBrB,GAAIqB,EAAOH,MAAOE,EAAtC,SAA+CA,GAAlCC,SAQVE,EApHf,WACE,IADqB,EAEGC,mBAAS,IAFZ,mBAEdpB,EAFc,KAERqB,EAFQ,KAIfC,EAAQ,uCAAG,8BAAAC,EAAA,+EAEUC,MALf,kEAK0B,CAChCC,OAAQ,MACRC,QAAS,CACP,YCbS,2CDcT,eAAgB,sBANP,cAEPC,EAFO,gBAScA,EAASC,OATvB,OASPC,EATO,OAUbR,EAAQQ,GACRC,QAAQC,IAAIF,GAXC,kDAabC,QAAQC,IAAI,4BAbC,0DAAH,qDAyBd,OARAC,qBAAU,WACRV,MACC,IAOD,uBAAMjB,UAAU,cAAc4B,SALX,SAACC,GACpBA,EAAEC,kBAIF,UACE,6BAAKnC,EAAKoC,YACV,cAAC,EAAD,CAAapC,KAAMA,IACnB,uBAAOO,KAAK,SAASO,MAAM,eEtBlBuB,MAXf,WAGE,OACE,sBAAKhC,UAAU,MAAf,UACE,gDACA,cAAC,EAAD,QCLNiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.88b40c3d.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { MY_API_KEY } from '../config';\n\n\nfunction Formularios() {\n  const url = 'https://1crd6sdyg2.execute-api.us-east-1.amazonaws.com/dev/form';\n  const [data, setData] = useState('');\n\n  const fetchApi = async () => {\n    try {\n      const response = await fetch(url, {\n        method: 'GET',\n        headers: {\n          'x-api-key': MY_API_KEY,\n          'Content-Type': 'application/json'\n        }\n      });\n      const responseJSON = await response.json();\n      setData(responseJSON);\n      console.log(responseJSON);\n    } catch (error) {\n      console.log('Trucha con este pex' + error);\n    }\n  };\n\n  useEffect(() => {\n    fetchApi();\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <form className='people_form' onSubmit={handleSubmit}>\n      <h2>{data.form_name}</h2>\n      <GenericForm data={data} />\n      <input type='submit' value='Enviar' />\n    </form>\n  );\n}\n\nconst renderTypeInput = (qType, id, qOptions) => {\n  switch (qType) {\n    case 'String':\n      return <CampoString id={id} />;\n    case 'Numeric':\n      return <CampoNumeric id={id} />;\n    case 'Boolean':\n      return <CampoBoolean id={id} />;\n    case 'Checkbox':\n      return <CampoCheckbox options={qOptions} />;\n    case 'Dropdown':\n      return <CampoSelect options={qOptions} />;\n    default:\n      return 'foo';\n  }\n};\n\nconst GenericForm = ({ data }) => {\n  return (\n    data ? data.questions.map((question, question_id) => {\n      return (\n        <section className='sectionForm' key={question_id}>\n          <label htmlFor=''>{question.question}</label>\n          {renderTypeInput(question.type, question.question_id, question.options)}\n        </section>\n      );\n    }) : []\n  );\n};\n\nconst CampoString = ({ id }) => {\n  return <input type='text' id={id} name={id} />;\n};\n\nconst CampoNumeric = ({ id }) => {\n  return <input type='number' id={id} name={id} min='1' max='99' />;\n};\n\nconst CampoBoolean = ({ id }) => {\n  return (\n    <>\n      <label htmlFor='si'>Si</label>\n      <input type='radio' id={id} name={id} value='Si' />\n      <label htmlFor='no'>No</label>\n      <input type='radio' id={id} name={id} value='No' />\n    </>\n  );\n};\n\nconst CampoCheckbox = ({ options }) => {\n  return (\n    options.map((option, index) => {\n      return (\n        <section key={index}>\n          <input type='checkbox' id={index} name={option} value={option} />\n          <label htmlFor='html'>{option}</label>\n        </section>\n      );\n\n    })\n\n  );\n};\n\nconst CampoSelect = ({ options }) => {\n  return (\n    <select name=\"appoinment\">\n      {\n        options.map((option, index) => {\n          return (\n            <option key={index} id={index} value={option}>{option}</option>\n          );\n        })\n      }\n    </select>\n  );\n};\n\nexport default Formularios;\n","const MY_API_KEY = 'QSss48gu1Q2XXUkLR4e8276MNqJR0hKr4D2mWuWK';\nexport { MY_API_KEY };","import React from 'react';\nimport Formularios from './components/Formularios';\n\n\nfunction App() {\n\n\n  return (\n    <div className=\"App\">\n      <h1>Reto BEERHOUSE</h1>\n      <Formularios />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}